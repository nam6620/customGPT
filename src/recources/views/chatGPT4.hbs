<div class="right-side-header">
    <div class="right-side-header-logo">
        <img src="./img/logoChatGPT.png" alt="" style="height: 40px; border-radius: 5px">
    </div>
    <div class="right-side-header-content">
        <div class="right-side-header-content-title">
            ChatGPT
        </div>
        <div class="right-side-header-content-title">
            <i class="fa-solid fa-shield"></i> First chat
        </div>
    </div>
</div>
<div class="right-side-body">
    <div class="right-side-body-center" style="bottom: 70px;">
        <div class="right-side-body-message" id="chat_container">
            {{!-- <div class="messeage request">
                Hãy nhớ xem lại thông báo lỗi, ngăn xếp gọi hàm và mã liên quan để xác định nguyên nhân gốc của sự cố và
                tìm ra giải pháp phù hợp.
            </div>
            <div class="messeage respone">
                Hello
            </div> --}}
        </div>
        <div class="right-side-body-send" style="height: 100px;">
            <div class="right-side-body-send-icon">
                <i class="fa-solid fa-broom"></i>
            </div>
            <form class="input_text" id="form" style="border-radius: 10px;">
                <div style="width:90%">
                    <input type="text" class="input_send" placeholder="Talk to Chat GPT" id="questionInput"
                        name="prompt">
                    <div class="file_name" id="fileName">
                        
                    </div>
                </div>
                <input type="file" style="display: none;" id="fileInput" name="img">
                <div class="right-side-body-send-icon" id="attachBTN">
                    <i class="fa-solid fa-paperclip"></i>
                </div>
                <div class="right-side-body-send-icon">
                    <i class="fa-solid fa-microphone"></i>
                </div>
                <button style="submit" class="right-side-body-send-icon" id="button">
                    <i class="fa-solid fa-arrow-right"></i>
                </button>
            </form>

        </div>
    </div>
</div>
<script>
    const form = document.querySelector('#form')
    const chatContainer = document.querySelector('#chat_container');
    const attachBTN = document.querySelector('#attachBTN');
    const fileInput = document.querySelector('#fileInput');
     const fileName = document.querySelector('#fileName');

    const theWholeConversation = [{
        role: "assistant",
        content: "Xin chào tôi là chat bot được làm ra bởi Phương Nam!"
    }];

    attachBTN.addEventListener("click", function () {
        fileInput.click();
    });

    fileInput.addEventListener("change", function () {
        fileName.textContent = this.files[0].name;
    });


    function addMessageToConversation(role, message) {
        theWholeConversation.push({
            role: role,
            content: message
        });
    }



    function loader(element) {
        element.textContent = ''

        loadInterval = setInterval(() => {
            element.textContent += '.';

            if (element.textContent === '....') {
                element.textContent = '';
            }
        }, 300);
    }

    function typeText(element, text) {
        let index = 0

        let interval = setInterval(() => {
            if (index < text.length) {
                element.innerHTML += text.charAt(index)
                index++
            } else {
                clearInterval(interval)
            }
        }, 20)
    }


    function generateUniqueId() {
        const timestamp = Date.now();
        const randomNumber = Math.random();
        const hexadecimalString = randomNumber.toString(16);
        return `id-${timestamp}-${hexadecimalString}`;
    }

    function chatStripe(isAi, value, uniqueId) {
        return (
            `
                <div class="messeage-p" >
                    <div class="messeage-child ${isAi ? 'respone' : 'request'}" id=${uniqueId}> ${value}</div>
                </div>
            `
        )
    }

    const handleSubmit = async (e) => {
        e.preventDefault()

        const data = new FormData(form)

        // user's chatstripe
        chatContainer.innerHTML += chatStripe(false, data.get('prompt'))

        // to clear the textarea input 
        form.reset()

        // bot's chatstripe
        const uniqueId = generateUniqueId()
        chatContainer.innerHTML += chatStripe(true, " ", uniqueId)

        // to focus scroll to the bottom 
        chatContainer.scrollTop = chatContainer.scrollHeight;

        // specific message div 
        const messageDiv = document.getElementById(uniqueId)

        // messageDiv.innerHTML = "..."
        loader(messageDiv)
        addMessageToConversation('user', data.get('prompt'))
        //console.log(theWholeConversation)
        const response = await fetch(`http://localhost:3000/chatGPT4/sendms`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({
                prompt: theWholeConversation
            })
        });


        clearInterval(loadInterval)
        messageDiv.innerHTML = " "

        if (response.ok) {
            const data = await response.json();
            console.log(data);
            const parsedData = data.bot.content.trim() // trims any trailing spaces/'\n' 
            typeText(messageDiv, parsedData)
            addMessageToConversation('assistant', parsedData)
            console.log(theWholeConversation)
        } else {
            const err = await response.text()
            messageDiv.innerHTML = "Something went wrong"
            alert(err)
        }
    }
    form.addEventListener('submit', handleSubmit)
</script>